{
  "nodes": [
    {
      "id": "inMemoryCache_0",
      "position": {
        "x": 1556.7291913702365,
        "y": -101.45589073004558
      },
      "type": "customNode",
      "data": {
        "id": "inMemoryCache_0",
        "label": "InMemory Cache",
        "version": 1,
        "name": "inMemoryCache",
        "type": "InMemoryCache",
        "baseClasses": [
          "InMemoryCache",
          "BaseCache"
        ],
        "category": "Cache",
        "description": "Cache LLM response in memory, will be cleared once app restarted",
        "inputParams": [],
        "inputAnchors": [],
        "inputs": {},
        "outputAnchors": [
          {
            "id": "inMemoryCache_0-output-inMemoryCache-InMemoryCache|BaseCache",
            "name": "inMemoryCache",
            "label": "InMemoryCache",
            "description": "Cache LLM response in memory, will be cleared once app restarted",
            "type": "InMemoryCache | BaseCache"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 143,
      "positionAbsolute": {
        "x": 1556.7291913702365,
        "y": -101.45589073004558
      },
      "selected": false,
      "dragging": false
    },
    {
      "id": "recursiveCharacterTextSplitter_0",
      "position": {
        "x": 219.5295542403906,
        "y": -156.00396195764873
      },
      "type": "customNode",
      "data": {
        "id": "recursiveCharacterTextSplitter_0",
        "label": "Recursive Character Text Splitter",
        "version": 2,
        "name": "recursiveCharacterTextSplitter",
        "type": "RecursiveCharacterTextSplitter",
        "baseClasses": [
          "RecursiveCharacterTextSplitter",
          "TextSplitter",
          "BaseDocumentTransformer",
          "Runnable"
        ],
        "category": "Text Splitters",
        "description": "Split documents recursively by different characters - starting with \"\\n\\n\", then \"\\n\", then \" \"",
        "inputParams": [
          {
            "label": "Chunk Size",
            "name": "chunkSize",
            "type": "number",
            "description": "Number of characters in each chunk. Default is 1000.",
            "default": 1000,
            "optional": true,
            "id": "recursiveCharacterTextSplitter_0-input-chunkSize-number"
          },
          {
            "label": "Chunk Overlap",
            "name": "chunkOverlap",
            "type": "number",
            "description": "Number of characters to overlap between chunks. Default is 200.",
            "default": 200,
            "optional": true,
            "id": "recursiveCharacterTextSplitter_0-input-chunkOverlap-number"
          },
          {
            "label": "Custom Separators",
            "name": "separators",
            "type": "string",
            "rows": 4,
            "description": "Array of custom separators to determine when to split the text, will override the default separators",
            "placeholder": "[\"|\", \"##\", \">\", \"-\"]",
            "additionalParams": true,
            "optional": true,
            "id": "recursiveCharacterTextSplitter_0-input-separators-string"
          }
        ],
        "inputAnchors": [],
        "inputs": {
          "chunkSize": "1000",
          "chunkOverlap": 200,
          "separators": ""
        },
        "outputAnchors": [
          {
            "id": "recursiveCharacterTextSplitter_0-output-recursiveCharacterTextSplitter-RecursiveCharacterTextSplitter|TextSplitter|BaseDocumentTransformer|Runnable",
            "name": "recursiveCharacterTextSplitter",
            "label": "RecursiveCharacterTextSplitter",
            "description": "Split documents recursively by different characters - starting with \"\\n\\n\", then \"\\n\", then \" \"",
            "type": "RecursiveCharacterTextSplitter | TextSplitter | BaseDocumentTransformer | Runnable"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 429,
      "selected": false,
      "positionAbsolute": {
        "x": 219.5295542403906,
        "y": -156.00396195764873
      },
      "dragging": false
    },
    {
      "id": "vectorDBQAChain_0",
      "position": {
        "x": 2405.6748349294644,
        "y": 504.8824893678884
      },
      "type": "customNode",
      "data": {
        "id": "vectorDBQAChain_0",
        "label": "VectorDB QA Chain",
        "version": 2,
        "name": "vectorDBQAChain",
        "type": "VectorDBQAChain",
        "baseClasses": [
          "VectorDBQAChain",
          "BaseChain",
          "Runnable"
        ],
        "category": "Chains",
        "description": "QA chain for vector databases",
        "inputParams": [],
        "inputAnchors": [
          {
            "label": "Language Model",
            "name": "model",
            "type": "BaseLanguageModel",
            "id": "vectorDBQAChain_0-input-model-BaseLanguageModel"
          },
          {
            "label": "Vector Store",
            "name": "vectorStore",
            "type": "VectorStore",
            "id": "vectorDBQAChain_0-input-vectorStore-VectorStore"
          },
          {
            "label": "Input Moderation",
            "description": "Detect text that could generate harmful output and prevent it from being sent to the language model",
            "name": "inputModeration",
            "type": "Moderation",
            "optional": true,
            "list": true,
            "id": "vectorDBQAChain_0-input-inputModeration-Moderation"
          }
        ],
        "inputs": {
          "model": "{{chatLocalAI_0.data.instance}}",
          "vectorStore": "{{faiss_0.data.instance}}",
          "inputModeration": ""
        },
        "outputAnchors": [
          {
            "id": "vectorDBQAChain_0-output-vectorDBQAChain-VectorDBQAChain|BaseChain|Runnable",
            "name": "vectorDBQAChain",
            "label": "VectorDBQAChain",
            "description": "QA chain for vector databases",
            "type": "VectorDBQAChain | BaseChain | Runnable"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 331,
      "positionAbsolute": {
        "x": 2405.6748349294644,
        "y": 504.8824893678884
      },
      "selected": false,
      "dragging": false
    },
    {
      "id": "jinaEmbeddings_0",
      "position": {
        "x": 726.1250238993798,
        "y": 582.385061860272
      },
      "type": "customNode",
      "data": {
        "id": "jinaEmbeddings_0",
        "label": "Jina Embeddings",
        "version": 1,
        "name": "jinaEmbeddings",
        "type": "JinaEmbeddings",
        "baseClasses": [
          "JinaEmbeddings",
          "Embeddings"
        ],
        "category": "Embeddings",
        "description": "JinaAI API to generate embeddings for a given text",
        "inputParams": [
          {
            "label": "Connect Credential",
            "name": "credential",
            "type": "credential",
            "credentialNames": [
              "jinaAIApi"
            ],
            "id": "jinaEmbeddings_0-input-credential-credential"
          },
          {
            "label": "Model Name",
            "name": "modelName",
            "type": "string",
            "default": "jina-embeddings-v2-base-en",
            "description": "Refer to <a href=\"https://jina.ai/embeddings/\" target=\"_blank\">JinaAI documentation</a> for available models",
            "id": "jinaEmbeddings_0-input-modelName-string"
          }
        ],
        "inputAnchors": [],
        "inputs": {
          "modelName": "jina-embeddings-v2-base-en"
        },
        "outputAnchors": [
          {
            "id": "jinaEmbeddings_0-output-jinaEmbeddings-JinaEmbeddings|Embeddings",
            "name": "jinaEmbeddings",
            "label": "JinaEmbeddings",
            "description": "JinaAI API to generate embeddings for a given text",
            "type": "JinaEmbeddings | Embeddings"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 374,
      "selected": false,
      "dragging": false,
      "positionAbsolute": {
        "x": 726.1250238993798,
        "y": 582.385061860272
      }
    },
    {
      "id": "faiss_0",
      "position": {
        "x": 1584.3124980781247,
        "y": 394.52094007512187
      },
      "type": "customNode",
      "data": {
        "id": "faiss_0",
        "label": "Faiss",
        "version": 1,
        "name": "faiss",
        "type": "Faiss",
        "baseClasses": [
          "Faiss",
          "VectorStoreRetriever",
          "BaseRetriever"
        ],
        "category": "Vector Stores",
        "description": "Upsert embedded data and perform similarity search upon query using Faiss library from Meta",
        "inputParams": [
          {
            "label": "Base Path to load",
            "name": "basePath",
            "description": "Path to load faiss.index file",
            "placeholder": "C:\\Users\\User\\Desktop",
            "type": "string",
            "id": "faiss_0-input-basePath-string"
          },
          {
            "label": "Top K",
            "name": "topK",
            "description": "Number of top results to fetch. Default to 4",
            "placeholder": "4",
            "type": "number",
            "additionalParams": true,
            "optional": true,
            "id": "faiss_0-input-topK-number"
          }
        ],
        "inputAnchors": [
          {
            "label": "Document",
            "name": "document",
            "type": "Document",
            "list": true,
            "optional": true,
            "id": "faiss_0-input-document-Document"
          },
          {
            "label": "Embeddings",
            "name": "embeddings",
            "type": "Embeddings",
            "id": "faiss_0-input-embeddings-Embeddings"
          }
        ],
        "inputs": {
          "document": [
            "{{folderFiles_0.data.instance}}"
          ],
          "embeddings": "{{jinaEmbeddings_0.data.instance}}",
          "basePath": "/Users/charlesqin/Downloads/",
          "topK": ""
        },
        "outputAnchors": [
          {
            "name": "output",
            "label": "Output",
            "type": "options",
            "description": "",
            "options": [
              {
                "id": "faiss_0-output-retriever-Faiss|VectorStoreRetriever|BaseRetriever",
                "name": "retriever",
                "label": "Faiss Retriever",
                "description": "",
                "type": "Faiss | VectorStoreRetriever | BaseRetriever"
              },
              {
                "id": "faiss_0-output-vectorStore-Faiss|SaveableVectorStore|VectorStore",
                "name": "vectorStore",
                "label": "Faiss Vector Store",
                "description": "",
                "type": "Faiss | SaveableVectorStore | VectorStore"
              }
            ],
            "default": "retriever"
          }
        ],
        "outputs": {
          "output": "vectorStore"
        },
        "selected": false
      },
      "width": 300,
      "height": 458,
      "selected": false,
      "positionAbsolute": {
        "x": 1584.3124980781247,
        "y": 394.52094007512187
      },
      "dragging": false
    },
    {
      "id": "chatLocalAI_0",
      "position": {
        "x": 2012.490122428237,
        "y": -66.91178380430252
      },
      "type": "customNode",
      "data": {
        "id": "chatLocalAI_0",
        "label": "ChatLocalAI",
        "version": 2,
        "name": "chatLocalAI",
        "type": "ChatLocalAI",
        "baseClasses": [
          "ChatLocalAI",
          "BaseChatModel",
          "BaseChatModel",
          "BaseLanguageModel",
          "Runnable"
        ],
        "category": "Chat Models",
        "description": "Use local LLMs like llama.cpp, gpt4all using LocalAI",
        "inputParams": [
          {
            "label": "Connect Credential",
            "name": "credential",
            "type": "credential",
            "credentialNames": [
              "localAIApi"
            ],
            "optional": true,
            "id": "chatLocalAI_0-input-credential-credential"
          },
          {
            "label": "Base Path",
            "name": "basePath",
            "type": "string",
            "placeholder": "http://localhost:8080/v1",
            "id": "chatLocalAI_0-input-basePath-string"
          },
          {
            "label": "Model Name",
            "name": "modelName",
            "type": "string",
            "placeholder": "gpt4all-lora-quantized.bin",
            "id": "chatLocalAI_0-input-modelName-string"
          },
          {
            "label": "Temperature",
            "name": "temperature",
            "type": "number",
            "step": 0.1,
            "default": 0.9,
            "optional": true,
            "id": "chatLocalAI_0-input-temperature-number"
          },
          {
            "label": "Max Tokens",
            "name": "maxTokens",
            "type": "number",
            "step": 1,
            "optional": true,
            "additionalParams": true,
            "id": "chatLocalAI_0-input-maxTokens-number"
          },
          {
            "label": "Top Probability",
            "name": "topP",
            "type": "number",
            "step": 0.1,
            "optional": true,
            "additionalParams": true,
            "id": "chatLocalAI_0-input-topP-number"
          },
          {
            "label": "Timeout",
            "name": "timeout",
            "type": "number",
            "step": 1,
            "optional": true,
            "additionalParams": true,
            "id": "chatLocalAI_0-input-timeout-number"
          }
        ],
        "inputAnchors": [
          {
            "label": "Cache",
            "name": "cache",
            "type": "BaseCache",
            "optional": true,
            "id": "chatLocalAI_0-input-cache-BaseCache"
          }
        ],
        "inputs": {
          "cache": "{{inMemoryCache_0.data.instance}}",
          "basePath": "https://openrouter.ai/api/v1",
          "modelName": "mistralai/ministral-8b",
          "temperature": "0.1",
          "maxTokens": "",
          "topP": "",
          "timeout": ""
        },
        "outputAnchors": [
          {
            "id": "chatLocalAI_0-output-chatLocalAI-ChatLocalAI|BaseChatModel|BaseChatModel|BaseLanguageModel|Runnable",
            "name": "chatLocalAI",
            "label": "ChatLocalAI",
            "description": "Use local LLMs like llama.cpp, gpt4all using LocalAI",
            "type": "ChatLocalAI | BaseChatModel | BaseChatModel | BaseLanguageModel | Runnable"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 674,
      "selected": false,
      "positionAbsolute": {
        "x": 2012.490122428237,
        "y": -66.91178380430252
      },
      "dragging": false
    },
    {
      "id": "folderFiles_0",
      "position": {
        "x": 843.579647742342,
        "y": -69.99578428701219
      },
      "type": "customNode",
      "data": {
        "id": "folderFiles_0",
        "label": "Folder with Files",
        "version": 3,
        "name": "folderFiles",
        "type": "Document",
        "baseClasses": [
          "Document"
        ],
        "category": "Document Loaders",
        "description": "Load data from folder with multiple files",
        "inputParams": [
          {
            "label": "Folder Path",
            "name": "folderPath",
            "type": "string",
            "placeholder": "",
            "id": "folderFiles_0-input-folderPath-string"
          },
          {
            "label": "Recursive",
            "name": "recursive",
            "type": "boolean",
            "additionalParams": false,
            "id": "folderFiles_0-input-recursive-boolean"
          },
          {
            "label": "Pdf Usage",
            "name": "pdfUsage",
            "type": "options",
            "description": "Only when loading PDF files",
            "options": [
              {
                "label": "One document per page",
                "name": "perPage"
              },
              {
                "label": "One document per file",
                "name": "perFile"
              }
            ],
            "default": "perPage",
            "optional": true,
            "additionalParams": true,
            "id": "folderFiles_0-input-pdfUsage-options"
          },
          {
            "label": "JSONL Pointer Extraction",
            "name": "pointerName",
            "type": "string",
            "description": "Only when loading JSONL files",
            "placeholder": "<pointerName>",
            "optional": true,
            "additionalParams": true,
            "id": "folderFiles_0-input-pointerName-string"
          },
          {
            "label": "Additional Metadata",
            "name": "metadata",
            "type": "json",
            "description": "Additional metadata to be added to the extracted documents",
            "optional": true,
            "additionalParams": true,
            "id": "folderFiles_0-input-metadata-json"
          },
          {
            "label": "Omit Metadata Keys",
            "name": "omitMetadataKeys",
            "type": "string",
            "rows": 4,
            "description": "Each document loader comes with a default set of metadata keys that are extracted from the document. You can use this field to omit some of the default metadata keys. The value should be a list of keys, seperated by comma. Use * to omit all metadata keys execept the ones you specify in the Additional Metadata field",
            "placeholder": "key1, key2, key3.nestedKey1",
            "optional": true,
            "additionalParams": true,
            "id": "folderFiles_0-input-omitMetadataKeys-string"
          }
        ],
        "inputAnchors": [
          {
            "label": "Text Splitter",
            "name": "textSplitter",
            "type": "TextSplitter",
            "optional": true,
            "id": "folderFiles_0-input-textSplitter-TextSplitter"
          }
        ],
        "inputs": {
          "folderPath": "/Users/charlesqin/Documents/testrag",
          "recursive": "",
          "textSplitter": "{{recursiveCharacterTextSplitter_0.data.instance}}",
          "pdfUsage": "perPage",
          "pointerName": "",
          "metadata": "",
          "omitMetadataKeys": ""
        },
        "outputAnchors": [
          {
            "id": "folderFiles_0-output-folderFiles-Document",
            "name": "folderFiles",
            "label": "Document",
            "description": "Load data from folder with multiple files",
            "type": "Document"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 478,
      "selected": false,
      "positionAbsolute": {
        "x": 843.579647742342,
        "y": -69.99578428701219
      },
      "dragging": false
    }
  ],
  "edges": [
    {
      "source": "jinaEmbeddings_0",
      "sourceHandle": "jinaEmbeddings_0-output-jinaEmbeddings-JinaEmbeddings|Embeddings",
      "target": "faiss_0",
      "targetHandle": "faiss_0-input-embeddings-Embeddings",
      "type": "buttonedge",
      "id": "jinaEmbeddings_0-jinaEmbeddings_0-output-jinaEmbeddings-JinaEmbeddings|Embeddings-faiss_0-faiss_0-input-embeddings-Embeddings"
    },
    {
      "source": "faiss_0",
      "sourceHandle": "faiss_0-output-vectorStore-Faiss|SaveableVectorStore|VectorStore",
      "target": "vectorDBQAChain_0",
      "targetHandle": "vectorDBQAChain_0-input-vectorStore-VectorStore",
      "type": "buttonedge",
      "id": "faiss_0-faiss_0-output-vectorStore-Faiss|SaveableVectorStore|VectorStore-vectorDBQAChain_0-vectorDBQAChain_0-input-vectorStore-VectorStore"
    },
    {
      "source": "inMemoryCache_0",
      "sourceHandle": "inMemoryCache_0-output-inMemoryCache-InMemoryCache|BaseCache",
      "target": "chatLocalAI_0",
      "targetHandle": "chatLocalAI_0-input-cache-BaseCache",
      "type": "buttonedge",
      "id": "inMemoryCache_0-inMemoryCache_0-output-inMemoryCache-InMemoryCache|BaseCache-chatLocalAI_0-chatLocalAI_0-input-cache-BaseCache"
    },
    {
      "source": "chatLocalAI_0",
      "sourceHandle": "chatLocalAI_0-output-chatLocalAI-ChatLocalAI|BaseChatModel|BaseChatModel|BaseLanguageModel|Runnable",
      "target": "vectorDBQAChain_0",
      "targetHandle": "vectorDBQAChain_0-input-model-BaseLanguageModel",
      "type": "buttonedge",
      "id": "chatLocalAI_0-chatLocalAI_0-output-chatLocalAI-ChatLocalAI|BaseChatModel|BaseChatModel|BaseLanguageModel|Runnable-vectorDBQAChain_0-vectorDBQAChain_0-input-model-BaseLanguageModel"
    },
    {
      "source": "recursiveCharacterTextSplitter_0",
      "sourceHandle": "recursiveCharacterTextSplitter_0-output-recursiveCharacterTextSplitter-RecursiveCharacterTextSplitter|TextSplitter|BaseDocumentTransformer|Runnable",
      "target": "folderFiles_0",
      "targetHandle": "folderFiles_0-input-textSplitter-TextSplitter",
      "type": "buttonedge",
      "id": "recursiveCharacterTextSplitter_0-recursiveCharacterTextSplitter_0-output-recursiveCharacterTextSplitter-RecursiveCharacterTextSplitter|TextSplitter|BaseDocumentTransformer|Runnable-folderFiles_0-folderFiles_0-input-textSplitter-TextSplitter"
    },
    {
      "source": "folderFiles_0",
      "sourceHandle": "folderFiles_0-output-folderFiles-Document",
      "target": "faiss_0",
      "targetHandle": "faiss_0-input-document-Document",
      "type": "buttonedge",
      "id": "folderFiles_0-folderFiles_0-output-folderFiles-Document-faiss_0-faiss_0-input-document-Document"
    }
  ]
}